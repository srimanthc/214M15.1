/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class NodeTest {

    @Test
    public void testCreateNodeWithSquirrel() {
        // making a squirrel and dropping it into a node
        Squirrel squirrel = new Squirrel("Cheeks");
        Node node = new Node(squirrel);

        // checking that name is stored correctly and no children yet
        assertEquals("Cheeks", node.getData().getName());
        assertNull(node.left());
        assertNull(node.right());
    }

    @Test
    public void testSetLeftChild() {
        // setting a left child node
        Node parent = new Node(new Squirrel("Parent"));
        Node leftChild = new Node(new Squirrel("Lefty"));
        parent.setLeft(leftChild);

        // making sure left child was attached
        assertNotNull(parent.left());
        assertEquals("Lefty", parent.left().getData().getName());
    }

    @Test
    public void testSetRightChild() {
        // setting a right child node
        Node parent = new Node(new Squirrel("Parent"));
        Node rightChild = new Node(new Squirrel("Righty"));
        parent.setRight(rightChild);

        // making sure right child was attached
        assertNotNull(parent.right());
        assertEquals("Righty", parent.right().getData().getName());
    }

    @Test
    public void testSetBothChildren() {
        // attaching both left and right children to a parent
        Node parent = new Node(new Squirrel("Parent"));
        Node left = new Node(new Squirrel("Left"));
        Node right = new Node(new Squirrel("Right"));

        parent.setLeft(left);
        parent.setRight(right);

        // verifying both connections work
        assertEquals("Left", parent.left().getData().getName());
        assertEquals("Right", parent.right().getData().getName());
    }
}

